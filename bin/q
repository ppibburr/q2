#!/usr/bin/ruby -ws
$t=Time.now
$: << File.join(File.dirname(__FILE__), "/../lib")
require 'rubygems'
require 'ruby2vala'
require 'ruby_parser'

$h ||= false
$s ||= false
$first = ARGV.index('-f')
if $h then
  puts "usage: #{File.basename $0} [options] [file...]"
  puts "options:"
  puts "-h     : display usage"
  puts "-s     : print the sexp before displaying the translated ruby"

  exit 1
end

ARGV.push "-" if ARGV.empty?

parser    = RubyParser.new
ruby2ruby = Ruby2Ruby.new

$scope = [Scope.new]
sa=[]
$ruby = []
$one=nil
ARGV.each do |file|
  $ruby << (ruby = file == "-" ? $stdin.read : File.read(file))

  sa << sexp = parser.process(ruby, file)

  p sexp if $s

  $one=ruby2ruby.process(sexp)
  puts $one if $first
end

## One pass transpilation, requires more strict typing
# puts $one;exit

File.open("./types.rbm", "w") do |f|
  f.puts Marshal.dump($scope[0])
end

  begin
    $scope = [Marshal.load(open('./types.rbm').read)]
  rescue
    raise "hell"
  end

$SIG=nil
$KLASS=nil
$FE=nil
$return=nil

a=$ruby
$ruby = []
i=-1
sa.each do |sexp|
  $ruby << a[i+1]
  puts out="namespace Q { public double tt = #{Time.now-$t};}\n\n"+ruby2ruby.process(sexp)
end

